{"ast":null,"code":"const API_BASE_URL = 'https://ecommerce-chatbot-e5zr.onrender.com/api';\nexport const apiCall = async (endpoint, method = 'GET', data = null, token = null) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  } else {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      config.headers['Authorization'] = `Bearer ${storedToken}`;\n    }\n  }\n  if (data) {\n    config.body = JSON.stringify(data);\n  }\n  try {\n    const response = await fetch(url, config);\n    const responseData = await response.json();\n    if (!response.ok) {\n      throw new Error(responseData.message || 'API request failed');\n    }\n    return responseData;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const chatAPI = {\n  sendMessage: message => apiCall('/api/chat', 'POST', {\n    message\n  }),\n  getChatHistory: () => apiCall('/api/chat-history', 'GET') // This also needs /api prefix\n};\nexport const productsAPI = {\n  getAllProducts: () => apiCall('/api/products', 'GET'),\n  searchProducts: params => {\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/products/search?${queryString}`, 'GET');\n  },\n  getProductsByCategory: category => apiCall(`/products/category/${category}`, 'GET')\n};","map":{"version":3,"names":["API_BASE_URL","apiCall","endpoint","method","data","token","url","config","headers","storedToken","localStorage","getItem","body","JSON","stringify","response","fetch","responseData","json","ok","Error","message","error","chatAPI","sendMessage","getChatHistory","productsAPI","getAllProducts","searchProducts","params","queryString","URLSearchParams","toString","getProductsByCategory","category"],"sources":["C:/Users/DELL/Desktop/ecommerce-chatbot/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'https://ecommerce-chatbot-e5zr.onrender.com/api';\r\n\r\nexport const apiCall = async (endpoint, method = 'GET', data = null, token = null) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const config = {\r\n    method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      config.headers['Authorization'] = `Bearer ${storedToken}`;\r\n    }\r\n  }\r\n\r\n  if (data) {\r\n    config.body = JSON.stringify(data);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    const responseData = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(responseData.message || 'API request failed');\r\n    }\r\n\r\n    return responseData;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const chatAPI = {\r\n  sendMessage: (message) => apiCall('/api/chat', 'POST', { message }),\r\n  getChatHistory: () => apiCall('/api/chat-history', 'GET'), // This also needs /api prefix\r\n};\r\n\r\nexport const productsAPI = {\r\n  getAllProducts: () => apiCall('/api/products', 'GET'),\r\n  searchProducts: (params) => {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return apiCall(`/products/search?${queryString}`, 'GET');\r\n  },\r\n  getProductsByCategory: (category) => apiCall(`/products/category/${category}`, 'GET'),\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,iDAAiD;AAEtE,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,KAAK,GAAG,IAAI,KAAK;EACpF,MAAMC,GAAG,GAAG,GAAGN,YAAY,GAAGE,QAAQ,EAAE;EAExC,MAAMK,MAAM,GAAG;IACbJ,MAAM;IACNK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,IAAIH,KAAK,EAAE;IACTE,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD,CAAC,MAAM;IACL,MAAMI,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfF,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUC,WAAW,EAAE;IAC3D;EACF;EAEA,IAAIL,IAAI,EAAE;IACRG,MAAM,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;EACpC;EAEA,IAAI;IACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAEC,MAAM,CAAC;IACzC,MAAMU,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1C,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACI,OAAO,IAAI,oBAAoB,CAAC;IAC/D;IAEA,OAAOJ,YAAY;EACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG;EACrBC,WAAW,EAAGH,OAAO,IAAKpB,OAAO,CAAC,WAAW,EAAE,MAAM,EAAE;IAAEoB;EAAQ,CAAC,CAAC;EACnEI,cAAc,EAAEA,CAAA,KAAMxB,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAE;AAC7D,CAAC;AAED,OAAO,MAAMyB,WAAW,GAAG;EACzBC,cAAc,EAAEA,CAAA,KAAM1B,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC;EACrD2B,cAAc,EAAGC,MAAM,IAAK;IAC1B,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;IAC1D,OAAO/B,OAAO,CAAC,oBAAoB6B,WAAW,EAAE,EAAE,KAAK,CAAC;EAC1D,CAAC;EACDG,qBAAqB,EAAGC,QAAQ,IAAKjC,OAAO,CAAC,sBAAsBiC,QAAQ,EAAE,EAAE,KAAK;AACtF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}